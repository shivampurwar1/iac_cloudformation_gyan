AWSTemplateFormatVersion: "2010-09-09"
Description: "Template to test cfn-signal related use cases."
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Parent Stacks"
        Parameters:
          - ParentStackName
          - InstanceInAz
      -
        Label:
          default: "EC2 Configuration"
        Parameters:
          - ParameterEC2InstanceType
          - ParameterEC2KeyName
Parameters:
  ParentStackName:
    Description: "Add Stack Name to refer Networking related values"
    Type: String
    Default: shared-infrastructure
  InstanceInAz:
    Description: "Define AZ to deploy instances"
    Type: String
    Default: "az1"
    AllowedValues:
    - "az1"
    - "az2"
    - "az3"
  ParameterEC2InstanceType:
    Description: "Select EC2 Instance type from Predefined Values"
    Type: String
    Default: "t2.micro"
    AllowedValues:
    - "t2.micro"
    - "t3.micro"
    - "t3.small"
  ParameterEC2KeyName:
    Description: "Name of an Existing EC2 KeyPair to enable SSH to EC2"
    Type: AWS::EC2::KeyPair::KeyName
    Default: "mykey-sandbox"
Mappings:
  MappingsRegionAMI:
    us-east-1:
      AMI: ami-0ab4d1e9cf9a1215a
    ap-south-1:
      AMI: ami-0bcf5425cdc1d8a85
Resources:
  MyEc2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref ParameterEC2InstanceType
      ImageId:
        Fn::FindInMap:
        - MappingsRegionAMI
        - !Ref AWS::Region
        - AMI
      SecurityGroupIds:
        - Fn::ImportValue: !Sub "${ParentStackName}-dmzsg"
        - Fn::ImportValue: !Sub "${ParentStackName}-shareddmzsg"
      SubnetId:
        Fn::ImportValue: !Sub "${ParentStackName}-dmz${InstanceInAz}subnet"
      KeyName: !Ref ParameterEC2KeyName
      UserData:
        'Fn::Base64':
          !Sub |
          #!/bin/bash -xe
          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MyEc2 --configsets AnsibleSetup --region ${AWS::Region}
            ansible --version
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource MyEc2 --region ${AWS::Region}
      Tags:
        - "Key": "Name"
          "Value": !Join [ "-", [ MyEc2, !Ref "AWS::StackName" ] ]
    CreationPolicy:
      ResourceSignal:
        Count: "1"
        Timeout: PT5M
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          AnsibleSetup:
            - "install_pip"
            - "install_ansible"
            - "setting_ansible"
        install_pip:
#          packages:
#            yum:
#              pip: []
          commands:
            pip:
              command: "yum install pip -y"
        install_ansible:
          commands:
            pip_ansible:
              command: "pip install ansible"
        setting_ansible:
          commands:
            01_create_directories:
              command: "mkdir -p /opt/ansible/{playbooks,configs}"
            02_create_server_inventory_file:
              cwd: "/opt/ansible"
              command: echo -e "[ansible-controller]\ncontrol ansible_connection=local" > server-inventory
Outputs:
  MyEc2PublicIp:
    Description: "MyEc2 Public IP"
    Value: !GetAtt
      - MyEc2
      - PublicIp
  MyEc2PrivateIp:
    Description: "MyEc2 Private IP"
    Value: !GetAtt
      - MyEc2
      - PrivateIp
