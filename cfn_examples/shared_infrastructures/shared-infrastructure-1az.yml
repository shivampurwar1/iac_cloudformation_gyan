Description: "Basic Shared Infra Structure Setup (1 AZ)"
Mappings:
  RegionMap:
    ap-south-1:
      AZList: [ ap-south-1a ]
    us-east-1:
      AZList: [ us-east-1a ]
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Network Configuration - VPC"
        Parameters:
          - ParameterVpcCidr
      -
        Label:
          default: "Network Configuration - Public Subnet"
        Parameters:
          - ParameterDmzAz1Cidr
      -
        Label:
          default: "Network Configuration - Private Subnet"
        Parameters:
          - ParameterPrivateAz1Cidr
Parameters:
  ParameterVpcCidr:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/16
    Default: 10.20.0.0/16
  ParameterDmzAz1Cidr:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/22
    Default: 10.20.0.0/22
  ParameterPrivateAz1Cidr:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/22
    Default: 10.20.12.0/22
Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref ParameterVpcCidr
      Tags:
        - Key: Name
          Value: !Join [ "-", [ VPC, !Ref "AWS::StackName" ] ]
  IGW:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: !Join [ "-", [ IGW, !Ref "AWS::StackName" ] ]
  GatewayAttach:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC
  DmzAz1Subnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select
        - 0
        - !FindInMap [ RegionMap, !Ref "AWS::Region", AZList ]
      CidrBlock: !Ref ParameterDmzAz1Cidr
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join [ "-", [ DMZSubnetA, !Ref "AWS::StackName" ] ]
  PrivateAz1Subnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select
        - 0
        - !FindInMap [ RegionMap, !Ref "AWS::Region", AZList ]
      CidrBlock: !Ref ParameterPrivateAz1Cidr
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join [ "-", [ PrivateSubnetA, !Ref "AWS::StackName" ] ]
  SubnetRouteTableAssociateDmzAz1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePublicA
      SubnetId: !Ref DmzAz1Subnet
  RouteDefaultPublic:
    Type: "AWS::EC2::Route"
    DependsOn: GatewayAttach
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref RouteTablePublicA
  RouteTablePublicA:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join [ "-", [ RouteTablePublicA, !Ref "AWS::StackName" ] ]
  SubnetRouteTableAssociatePrivateAz1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePrivateA
      SubnetId: !Ref PrivateAz1Subnet
  RouteDefaultPrivate:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA
      RouteTableId: !Ref RouteTablePrivateA
  RouteTablePrivateA:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join [ "-", [ RouteTablePrivateA, !Ref "AWS::StackName" ] ]
  EIPNatGWA:
    DependsOn: GatewayAttach
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join [ "-", [ EIPNatGWA, !Ref "AWS::StackName" ] ]
  NatGatewayA:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt EIPNatGWA.AllocationId
      SubnetId: !Ref DmzAz1Subnet
      Tags:
        - Key: Name
          Value: !Join [ "-", [ NatGatewayA, !Ref "AWS::StackName" ] ]
  DMZSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Managed by Infra Team for access"
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Join [ "-", [ DMZSecurityGroup, !Ref "AWS::StackName" ] ]
  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Managed by Infra Team for access"
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref ParameterVpcCidr
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: !Ref ParameterVpcCidr
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: !Ref ParameterVpcCidr
      Tags:
        - Key: Name
          Value: !Join [ "-", [ PrivateSecurityGroup, !Ref "AWS::StackName" ] ]
  SharedDMZSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Managed by other CFN"
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join [ "-", [ ShareDMZSecurityGroup, !Ref "AWS::StackName" ] ]
  SharedPrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Managed by other CFN"
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join [ "-", [ SharedPrivateSecurityGroup, !Ref "AWS::StackName" ] ]
Outputs:
  vpcId:
    Description: Shared VPC
    Value: !Ref VPC
    Export:   
      Name: !Sub ${AWS::StackName}-vpcid
  vpcIpRange:
    Description: IP Range of Shared Infrastructure VPC
    Value: !Ref ParameterVpcCidr
    Export:
      Name: !Sub ${AWS::StackName}-vpciprange
  dmzAz1Subnet:
    Description: Shared Public AZ1 Subnet
    Value: !Ref DmzAz1Subnet
    Export:  
      Name: !Sub ${AWS::StackName}-dmzaz1subnet
  dmzAz1IpRange:
    Description: IP Range of Public AZ1 Subnet
    Value: !Ref ParameterDmzAz1Cidr
    Export:
      Name: !Sub ${AWS::StackName}-dmzaz1iprange
  privateAz1Subnet:
    Description: Shared Private AZ1 Subnet
    Value: !Ref PrivateAz1Subnet
    Export:  
      Name: !Sub ${AWS::StackName}-privateaz1subnet
  privateAz1IpRange:
    Description: IP Range of Private AZ1 Subnet
    Value: !Ref ParameterPrivateAz1Cidr
    Export:
      Name: !Sub ${AWS::StackName}-privateaz1iprange
  publicRouteTableA:
    Description: ID of Public RouteTableA
    Value: !Ref RouteTablePublicA
    Export:   
      Name: !Sub ${AWS::StackName}-publicrt
  privateRouteTable:
    Description: ID of Private RouteTableA
    Value: !Ref RouteTablePrivateA
    Export:   
      Name: !Sub ${AWS::StackName}-privaterta
  dmzSecurityGroup:
    Description: DMZ Security Group
    Value: !Ref DMZSecurityGroup
    Export:  
      Name: !Sub ${AWS::StackName}-dmzsg
  privateSecurityGroup:
    Description: Private Security Group
    Value: !Ref PrivateSecurityGroup
    Export:  
      Name: !Sub ${AWS::StackName}-privatesg
  shareddmzSecurityGroup:
    Description: Common DMZ Security Group
    Value: !Ref SharedDMZSecurityGroup
    Export:  
      Name: !Sub ${AWS::StackName}-shareddmzsg
  sharedprivateSecurityGroup:
    Description: Common Private Security Group
    Value: !Ref SharedPrivateSecurityGroup
    Export:  
      Name: !Sub ${AWS::StackName}-sharedprivatesg
